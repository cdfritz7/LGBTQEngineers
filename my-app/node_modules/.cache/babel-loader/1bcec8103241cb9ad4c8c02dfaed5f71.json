{"ast":null,"code":"var _jsxFileName = \"/home/fritz/Projects/LGBTWebsite/my-app/src/PeoplePage.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport './css/common.css';\nimport './css/PeoplePage.css';\n/*\n  a card for displaying officer information and pictures\n*/\n\nclass PersonCard extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    var colors = ['#FF6663', '#FEB144', '#FDFD97', '#9EE09E', '#9EC1CF', '#CC99C9'];\n    var my_color = colors[this.props.idx % colors.length];\n    var button;\n    if (this.props.link) button = /*#__PURE__*/React.createElement(\"a\", {\n      href: this.props.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        color: \"black\",\n        borderColor: \"black\",\n        backgroundColor: my_color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, this.props.link_name));\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"pcardclass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: this.props.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        backgroundColor: my_color,\n        bordercolor: \"black\"\n      },\n      className: \"my-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      style: {\n        fontSize: \"20px\"\n      },\n      className: \"my-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, this.props.position), /*#__PURE__*/React.createElement(Card.Text, {\n      className: \"my-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, this.props.description), button));\n  }\n\n}\n\nclass PeoplePage extends Component {\n  render() {\n    const data = require('./data/PeoplePageData.json');\n\n    var people = data['people'];\n    var cards = [];\n    var x;\n\n    for (x in people) {\n      let person = people[x];\n      cards.push( /*#__PURE__*/React.createElement(PersonCard, {\n        name: person[\"name\"],\n        position: person[\"position\"],\n        description: person[\"description\"],\n        image: person[\"image\"],\n        link: person[\"link\"],\n        link_name: person[\"link_name\"],\n        idx: x,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pcardcontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, cards);\n  }\n\n}\n\nexport default PeoplePage;","map":{"version":3,"sources":["/home/fritz/Projects/LGBTWebsite/my-app/src/PeoplePage.js"],"names":["React","Component","Card","Button","PersonCard","constructor","props","render","colors","my_color","idx","length","button","link","color","borderColor","backgroundColor","link_name","image","bordercolor","name","fontSize","position","description","PeoplePage","data","require","people","cards","x","person","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nimport './css/common.css';\nimport './css/PeoplePage.css';\n\n/*\n  a card for displaying officer information and pictures\n*/\nclass PersonCard extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n\n    var colors = ['#FF6663', '#FEB144', '#FDFD97', '#9EE09E', '#9EC1CF', '#CC99C9'];\n\n    var my_color = colors[this.props.idx%colors.length];\n    var button;\n    if(this.props.link)\n      button =\n      <a href={this.props.link}>\n        <Button style={{color:\"black\", borderColor: \"black\", backgroundColor: my_color}}>\n          {this.props.link_name}\n        </Button>\n      </a>\n\n    return (\n      <Card className=\"pcardclass\">\n        <Card.Img variant=\"top\" src={this.props.image}/>\n        <Card.Header\n          style={{backgroundColor:my_color, bordercolor:\"black\"}}\n          className=\"my-title\">\n          {this.props.name}\n        </Card.Header>\n        <Card.Body>\n          <Card.Subtitle style={{fontSize:\"20px\"}} className=\"my-text text-muted\">\n            {this.props.position}\n          </Card.Subtitle>\n          <Card.Text className=\"my-text\">\n            {this.props.description}\n          </Card.Text>\n          {button}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nclass PeoplePage extends Component {\n  render(){\n    const data = require('./data/PeoplePageData.json')\n    var people = data['people']\n    var cards = []\n    var x;\n\n    for(x in people){\n      let person = people[x];\n      cards.push(\n        <PersonCard name={person[\"name\"]}\n                position={person[\"position\"]}\n                description={person[\"description\"]}\n                image={person[\"image\"]}\n                link={person[\"link\"]}\n                link_name={person[\"link_name\"]}\n                idx={x}/>\n      )\n    }\n\n    return(\n        <div className=\"pcardcontainer\">\n          {cards}\n        </div>\n    );\n  }\n}\n\nexport default PeoplePage;\n"]},"metadata":{},"sourceType":"module"}